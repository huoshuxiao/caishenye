<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>

    <include resource="org/springframework/boot/logging/logback/base.xml"/>
    <contextName>${springAppName}</contextName>
    <jmxConfigurator/>

    <!-- logstash -->
    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- Logging Path -->
    <!-- Example for logging into the build folder of your project -->
    <property name="LOG_FILE" value="${BUILD_FOLDER:-build}/${springAppName}"/>​
    <!-- You can override this to have a custom pattern -->
    <property name="CONSOLE_LOG_PATTERN"
              value="%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"/>

    <!-- Appender to log to console -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in the console logs-->
            <level>DEBUG</level>
        </filter>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>

    <!-- Appender to log to file -->​
    <appender name="filebeat" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>7</maxHistory>
            <totalSizeCap>1000MB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>${CONSOLE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>
    ​

    <!-- Appender to log to file in a JSON format -->
    <appender name="logstash" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}.json</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.json.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>7</maxHistory>
            <totalSizeCap>1000MB</totalSizeCap>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder" charset="UTF-8">
            <providers>
                <timestamp>
<!--                    <timeZone>UTC</timeZone>-->
                    <timeZone>GMT+8</timeZone>
                </timestamp>
                <pattern>
                    <pattern>
                        {
                        "severity": "%level",
                        "service": "${springAppName:-}",
                        "trace": "%X{X-B3-TraceId:-}",
                        "span": "%X{X-B3-SpanId:-}",
                        "parent": "%X{X-B3-ParentSpanId:-}",
                        "exportable": "%X{X-Span-Export:-}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "class": "%logger{40}",
                        "rest": "%message"
                        }
                    </pattern>
                </pattern>
            </providers>
        </encoder>
    </appender>

    <!-- ELK (logstash) -->
    <appender name="elk" class="net.logstash.logback.appender.LogstashTcpSocketAppender">
        <!-- logstash server -->
        <destination>localhost:5000</destination>
        <keepAliveDuration>5 minutes</keepAliveDuration>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder" charset="UTF-8">
            <providers>
                <timestamp>
                    <timeZone>UTC</timeZone>
                </timestamp>
                <mdc />         <!-- MDC variables on the Thread will be written as JSON fields -->
                <context />     <!-- Outputs entries from logback's context -->
                <logLevel />    <!-- Logstash json format version, the @version field in the output -->
                <loggerName />
                <pattern>
                    <pattern>
                        {
                        "appname": "@project.artifactId@:-${springAppName}",
                        "severity": "%level",
                        "service": "${springAppName:-}",
                        "trace": "%X{X-B3-TraceId:-}",
                        "span": "%X{X-B3-SpanId:-}",
                        "parent": "%X{X-B3-ParentSpanId:-}",
                        "exportable": "%X{X-Span-Export:-}",
                        "pid": "${PID:-}",
                        "thread": "%thread",
                        "class": "%logger{40}",
                        "rest": "%message"
                        }
                    </pattern>
                </pattern>
                <threadName />
                <message />
                <logstashMarkers />     <!-- Useful so we can add extra information for specific log lines as Markers-->
                <stackTrace />          <!-- or through StructuredArguments-->
            </providers>
        </encoder>
    </appender>
    ​

    <!-- env -->
    <springProfile name="default">
        <root level="INFO">
<!--            <appender-ref ref="logstash"/>-->
        </root>
        <!-- business log -->
        <logger name="com.sun.caishenye" level="DEBUG">
<!--            <appender-ref ref="filebeat"/>-->
        </logger>
    </springProfile>

    <springProfile name="prod">
        <root level="INFO">
<!--            <appender-ref ref="logstash"/>-->
<!--            <appender-ref ref="filebeat"/>-->
            <appender-ref ref="elk"/>
        </root>
    </springProfile>

</configuration>